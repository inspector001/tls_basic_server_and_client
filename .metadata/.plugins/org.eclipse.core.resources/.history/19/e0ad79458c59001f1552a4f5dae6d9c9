package com.sgnn7.client;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.net.MalformedURLException;
import java.net.URL;
import java.security.KeyStore;
import java.security.NoSuchAlgorithmException;
import java.security.SecureRandom;

import javax.net.ssl.HttpsURLConnection;
import javax.net.ssl.KeyManagerFactory;
import javax.net.ssl.SSLContext;
import javax.net.ssl.SSLSocketFactory;
import javax.net.ssl.TrustManagerFactory;

public class HttpClient {
	static String clientKeystore = "client.keystore";
	static char[] keystorePassword = "changeit".toCharArray();
	static char[] keyPassword = "changeit".toCharArray();

	static String clientTruststore = "client.truststore";
	static char[] truststorePassword = "changeit".toCharArray();

	private static SSLSocketFactory getFactory() throws Exception {
		KeyStore keystore = KeyStore.getInstance("JKS");
		keystore.load(new FileInputStream(clientKeystore), keystorePassword);
		KeyManagerFactory keyManagerFactory = KeyManagerFactory
				.getInstance("SunX509");
		keyManagerFactory.init(keystore, keyPassword);

		KeyStore trustStore = KeyStore.getInstance("JKS");
		trustStore.load(new FileInputStream(clientTruststore),
				truststorePassword);
		TrustManagerFactory trustManagerFactory = TrustManagerFactory
				.getInstance("SunX509");
		trustManagerFactory.init(trustStore);

		SSLContext context = SSLContext.getInstance("TLSv1");
		context.init(keyManagerFactory.getKeyManagers(), trustManagerFactory
				.getTrustManagers(), new SecureRandom());

		return context.getSocketFactory();
	}

	public static void main(String args[]) {


		try {			
			URL url = new URL("https://localhost/");
			HttpsURLConnection con = (HttpsURLConnection) url.openConnection();
			con.setHostnameVerifier(new NullHostNameVerifier());
			con.setSSLSocketFactory(getFactory());
			
			System.out.println(getPage(con));

		} catch (MalformedURLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}

	private static String getPage(HttpsURLConnection connection) throws Exception {
		//OutputStreamWriter wr = null;
		BufferedReader rd = null;
		StringBuilder sb = null;
		String line = null;

		connection.setRequestMethod("GET");
		connection.setDoOutput(true);
		connection.setReadTimeout(10000);

		connection.connect();

		rd = new BufferedReader(new InputStreamReader(connection
				.getInputStream()));
		sb = new StringBuilder();

		while ((line = rd.readLine()) != null) {
			sb.append(line + '\n');
		}

		return sb.toString();
	}
}
